def libProp = ':gdx'

task customizeLib() {
    if(project.hasProperty('lib')){
        libProp = ':' + project.getProperty('lib')
    }
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        jcenter()
    }
    dependencies {
    }
}

allprojects {
    version = '1.0'
    ext {
        appName = 'petri-dish'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
    }
}

subprojects {
    apply plugin: 'pmd'
    apply plugin: 'findbugs'
    apply plugin: 'checkstyle'

    checkstyle {
        configProperties = ['baseDir': "$rootDir"]
        toolVersion = '7.5.1'
        configFile = new File(rootDir, 'checkstyle.xml')
        ignoreFailures = true
    }

    pmd {
        ignoreFailures = true
        consoleOutput = true
    }

    findbugs {
        ignoreFailures = true
    }

    task checkFindBugsReport {
        doLast() {
            def xmlReport = findbugsMain.reports.xml
            def slurped = new XmlSlurper().parse(xmlReport.destination)
            def bugsFound = slurped.BugInstance.size()
            if (bugsFound > 0) {
                System.err.println("$bugsFound FindBugs rule violations were found. See the report at: $xmlReport.destination")
            }
        }
    }

    tasks.withType(FindBugs) {
        it.finalizedBy checkFindBugsReport
    }
}

project(':gdx') {
    apply plugin: 'java'

    ext {
        gdxVersion = '1.9.6'
    }

    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        compile "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
    }
}

project(':gtge') {
    apply plugin: 'java'

    dependencies {
        compile files('libs/golden_0_2_3.jar')
    }
}

project(':main') {
    apply plugin: 'java'

    dependencies {
        compile project(libProp)
    }
}
